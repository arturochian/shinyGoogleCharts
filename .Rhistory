library(dplyr)
coffee_data <-
as.data.frame(rbind(
c('2004/05/01',  165,      938,         522,             998,           450,      614.6),
c('2005/06/01',  135,      1120,        599,             1268,          288,      682),
c('2006/07/01',  157,      1167,        587,             807,           397,      623),
c('2007/08/01',  139,      1110,        615,             968,           215,      609.4),
c('2008/09/01',  136,      691,         629,             1026,          366,      569.6)))
names(coffee_data) <- c('Month', 'Bolivia', 'Ecuador', 'Madagascar', 'Papua New Guinea', 'Rwanda', 'Average')
coffee_data <- mutate(coffee_data, Month = as.POSIXct(Month))
coffee_data
str(coffee_data)
#With options
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = coffee_data,
type = 'ComboChart',
options=list(
title = 'Mtcars: Cylinders v MPG',
hAxis = list(title = 'Cups'),
vAxis = list(title = 'Month'),
seriesType = 'bars'#,
#series =  list('5' = list(type = 'line'))
)
)
})
}
))
library(googleVis)
?gvisComboChart
plot(gvisComboChart(coffee_data, Month, yvar = c('Bolivia', 'Ecuador')))
plot(gvisComboChart(coffee_data, 'Month', yvar = c('Bolivia', 'Ecuador')))
plot(gvisComboChart(coffee_data, xvar = 'Month', yvar = 'Bolivia'))
coffee_data <-
as.data.frame(rbind(
c('2004/05/01',  165,      938,         522,             998,           450,      614.6),
c('2005/06/01',  135,      1120,        599,             1268,          288,      682),
c('2006/07/01',  157,      1167,        587,             807,           397,      623),
c('2007/08/01',  139,      1110,        615,             968,           215,      609.4),
c('2008/09/01',  136,      691,         629,             1026,          366,      569.6)))
names(coffee_data) <- c('Month', 'Bolivia', 'Ecuador', 'Madagascar', 'Papua New Guinea', 'Rwanda', 'Average')
#coffee_data <- mutate(coffee_data, Month = as.POSIXct(Month))
str(coffee_data)
plot(gvisComboChart(coffee_data, xvar = 'Month', yvar = 'Bolivia'))
coffee_data <-
as.data.frame(rbind(
c('2004/05/01',  165,      938,         522,             998,           450,      614.6),
c('2005/06/01',  135,      1120,        599,             1268,          288,      682),
c('2006/07/01',  157,      1167,        587,             807,           397,      623),
c('2007/08/01',  139,      1110,        615,             968,           215,      609.4),
c('2008/09/01',  136,      691,         629,             1026,          366,      569.6)))
names(coffee_data) <- c('Month', 'Bolivia', 'Ecuador', 'Madagascar', 'Papua New Guinea', 'Rwanda', 'Average')
coffee_data[,2:7] <- as.numeric(coffee_data[,2:7])
#coffee_data <- mutate(coffee_data, Month = as.POSIXct(Month))
str(coffee_data)
coffee_data[,2:7] <- as.numeric(coffee_data[,2:7])
coffee_data <-
as.data.frame(rbind(
c(165,      938,         522,             998,           450,      614.6),
c(135,      1120,        599,             1268,          288,      682),
c(157,      1167,        587,             807,           397,      623),
c(139,      1110,        615,             968,           215,      609.4),
c(136,      691,         629,             1026,          366,      569.6)))
coffee_data <- cbind(c('2004/05/01', '2005/06/01', '2005/07/01', '2005/08/01', '2005/09/01'), coffee_data)
str(coffee_data)
coffee_data <-
as.data.frame(rbind(
c(165,      938,         522,             998,           450,      614.6),
c(135,      1120,        599,             1268,          288,      682),
c(157,      1167,        587,             807,           397,      623),
c(139,      1110,        615,             968,           215,      609.4),
c(136,      691,         629,             1026,          366,      569.6)))
names(coffee_data) <- c('Bolivia', 'Ecuador', 'Madagascar', 'Papua New Guinea', 'Rwanda', 'Average')
coffee_data$Month <- as.POSIXct(c('2004/05/01', '2005/06/01', '2005/07/01', '2005/08/01', '2005/09/01'))
coffee_data <- select(coffee_data, c('Month', 'Bolivia', 'Ecuador', 'Madagascar', 'Papua New Guinea', 'Rwanda', 'Average'))
coffee_data <- select(coffee_data, Month, Bolivia, Ecuador, Madagascar, Papua New Guinea, Rwanda, Average)
coffee_data <- select(coffee_data, Month, Bolivia, Ecuador, Madagascar, 'Papua New Guinea', Rwanda, Average)
coffee_data <- select(coffee_data, Month, Bolivia, Ecuador, Madagascar, Papua, Rwanda, Average)
coffee_data <-
as.data.frame(rbind(
c(165,      938,         522,             998,           450,      614.6),
c(135,      1120,        599,             1268,          288,      682),
c(157,      1167,        587,             807,           397,      623),
c(139,      1110,        615,             968,           215,      609.4),
c(136,      691,         629,             1026,          366,      569.6)))
names(coffee_data) <- c('Bolivia', 'Ecuador', 'Madagascar', 'Papua', 'Rwanda', 'Average')
coffee_data$Month <- as.POSIXct(c('2004/05/01', '2005/06/01', '2005/07/01', '2005/08/01', '2005/09/01'))
coffee_data <- select(coffee_data, Month, Bolivia, Ecuador, Madagascar, Papua, Rwanda, Average)
str(coffee_data)
plot(gvisComboChart(coffee_data, xvar = 'Month', yvar = 'Bolivia'))
plot(gvisComboChart(coffee_data, xvar = 'Month', yvar = c('Bolivia', 'Ecuador'))
)
plot(gvisComboChart(
data = coffee_data,
xvar = 'Month',
yvar = c('Bolivia', 'Ecuador', 'Madagascar', 'Papua', 'Rwanda', 'Average'),
options = list(
seriesType = 'lines',
series = '{6: {type:"bars"}}'
)))
plot(gvisComboChart(
data = coffee_data,
xvar = 'Month',
yvar = c('Bolivia', 'Ecuador', 'Madagascar', 'Papua', 'Rwanda', 'Average'),
options = list(
seriesType = 'lines',
series = '{5: {type:"bars"}}'
)))
coffee_data <-
as.data.frame(rbind(
c(165,      938,         522,             998,           450,      614.6),
c(135,      1120,        599,             1268,          288,      682),
c(157,      1167,        587,             807,           397,      623),
c(139,      1110,        615,             968,           215,      609.4),
c(136,      691,         629,             1026,          366,      569.6)))
names(coffee_data) <- c('Bolivia', 'Ecuador', 'Madagascar', 'Papua', 'Rwanda', 'Average')
coffee_data$Month <- c('2004/05/01', '2005/06/01', '2005/07/01', '2005/08/01', '2005/09/01')
coffee_data <- select(coffee_data, Month, Bolivia, Ecuador, Madagascar, Papua, Rwanda, Average)
str(coffee_data)
plot(gvisComboChart(
data = coffee_data,
xvar = 'Month',
yvar = c('Bolivia', 'Ecuador', 'Madagascar', 'Papua', 'Rwanda', 'Average'),
options = list(
seriesType = 'lines',
series = '{5: {type:"bars"}}'
)))
?addResourcePath
library(shiny)
?addResourcePath
document()
library(devtools)
document()
document()
load_all()
library(shinyGoogleCharts)
library(RJSONIO)
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
q
q
system.file('shinyGoogleCharts', package = 'shinyGoogleCharts'))
system.file('shinyGoogleCharts', package = 'shinyGoogleCharts')
?system.file
system.file(package = 'shinyGoogleCharts'))
system.file(package = 'shinyGoogleCharts')
document()
load_all()
library(shinyGoogleCharts)
library(RJSONIO)
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
document()
load_all()
library(shinyGoogleCharts)
library(RJSONIO)
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
#With options
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart',
options=list(
title = 'Mtcars: Cylinders v MPG',
hAxis = list(title = 'Number of Cylinders'),
vAxis = list(title = 'Miles Per Gallon (mpg)')#,
#height = 400,
#width = 600
)
)
})
}
))
addResourcePath(prefix = 'shinyGoogleCharts', directoryPath = system.file(package = 'shinyGoogleCharts'))
document()
document()
load_all()
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
document()
load_all()
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
document()
load_all()
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
system.file('shinyGoogleCharts', package = 'shinyGoogleCharts')
addResourcePath(prefix = 'shinyGoogleCharts', directoryPath = system.file('shinyGoogleCharts', package = 'shinyGoogleCharts'))
system.file('www', package = 'shinyGoogleCharts')
document()
load_all()
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
document()
load_all()
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
?addResourcePath
document()
load_all()
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
?initResourcePaths
??initResourcePaths
system.file('www', package = 'shinyGoogleCharts')
document()
load_all()
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
document()
document()
load_all()
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
document()
load_all()
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
#With options
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart',
options=list(
title = 'Mtcars: Cylinders v MPG',
hAxis = list(title = 'Number of Cylinders'),
vAxis = list(title = 'Miles Per Gallon (mpg)')#,
#height = 400,
#width = 600
)
)
})
}
))
#Chart Editor
runApp(list(
ui = fluidPage(
fluidRow(column(12, googleChartOutput('chartgItemPlot1'))),
googleChartEditor('chartgItemPlot1_editor', 'chartgItemPlot1'),
h4('Chart Options'),
verbatimTextOutput('chartgItemPlot1_opts')
),
server = function(input, output, session) {
output$chartgItemPlot1_opts <- renderPrint({input$chartgItemPlot1_editor})
output$chartgItemPlot1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = input$chartgItemPlot1_editor$chartType,
options = fromJSON(input$chartgItemPlot1_editor$options)
)
})
}
))
?mtcars
cars
#Chart Editor
runApp(list(
ui = fluidPage(
fluidRow(column(12, googleChartOutput('chartgItemPlot1'))),
googleChartEditor('chartgItemPlot1_editor', 'chartgItemPlot1'),
h4('Chart Options'),
verbatimTextOutput('chartgItemPlot1_opts')
),
server = function(input, output, session) {
output$chartgItemPlot1_opts <- renderPrint({input$chartgItemPlot1_editor})
output$chartgItemPlot1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg', 'wt')),
type = input$chartgItemPlot1_editor$chartType,
options = fromJSON(input$chartgItemPlot1_editor$options)
)
})
}
))
#Chart Editor
runApp(list(
ui = fluidPage(
fluidRow(column(12, googleChartOutput('chartgItemPlot1'))),
googleChartEditor('chartgItemPlot1_editor', 'chartgItemPlot1'),
h4('Chart Options'),
verbatimTextOutput('chartgItemPlot1_opts')
),
server = function(input, output, session) {
output$chartgItemPlot1_opts <- renderPrint({input$chartgItemPlot1_editor})
output$chartgItemPlot1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('disp','mpg', 'wt')),
type = input$chartgItemPlot1_editor$chartType,
options = fromJSON(input$chartgItemPlot1_editor$options)
)
})
}
))
#Chart Editor
runApp(list(
ui = fluidPage(
fluidRow(column(12, googleChartOutput('chartgItemPlot1'))),
googleChartEditor('chartgItemPlot1_editor', 'chartgItemPlot1'),
h4('Chart Options'),
verbatimTextOutput('chartgItemPlot1_opts')
),
server = function(input, output, session) {
output$chartgItemPlot1_opts <- renderPrint({input$chartgItemPlot1_editor})
output$chartgItemPlot1 <- renderGoogleChart({
googleChart(
data = arrange(select(mtcars, disp, mpg, wt), disp),
type = input$chartgItemPlot1_editor$chartType,
options = fromJSON(input$chartgItemPlot1_editor$options)
)
})
}
))
library(dplyr)
#Chart Editor
runApp(list(
ui = fluidPage(
fluidRow(column(12, googleChartOutput('chartgItemPlot1'))),
googleChartEditor('chartgItemPlot1_editor', 'chartgItemPlot1'),
h4('Chart Options'),
verbatimTextOutput('chartgItemPlot1_opts')
),
server = function(input, output, session) {
output$chartgItemPlot1_opts <- renderPrint({input$chartgItemPlot1_editor})
output$chartgItemPlot1 <- renderGoogleChart({
googleChart(
data = arrange(select(mtcars, disp, mpg, wt), disp),
type = input$chartgItemPlot1_editor$chartType,
options = fromJSON(input$chartgItemPlot1_editor$options)
)
})
}
))
document()
load_all()
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
document()
load_all()
addResourcePath("shinyGoogleCharts", system.file("www", package = "shinyGoogleCharts"))
library(shiny)
addResourcePath("shinyGoogleCharts", system.file("www", package = "shinyGoogleCharts"))
system.file('www', package = 'shinyGoogleCharts')
system.file('www', package = 'shinyGoogleCharts')
system.file(package = 'shinyGoogleCharts')
?system.file
system.file('www', package = 'shinyGoogleCharts')
document()
library(devtools)
document()
load_all()
system.file('www', package = 'shinyGoogleCharts')
system.file(package = 'shinyGoogleCharts')
system.file('inst', package = 'shinyGoogleCharts')
system.file('inst/www', package = 'shinyGoogleCharts')
document()
load_all()
library(shinyGoogleCharts)
library(RJSONIO)
library(dplyr)
#Basic Example
runApp(list(
ui = fluidPage(googleChartOutput('gchart1')),
server = function(input, output, session) {
output$gchart1 <- renderGoogleChart({
googleChart(
data = subset(mtcars, select = c('cyl','mpg')),
type = 'ScatterChart'
)
})
}
))
